os: linux
language: go
go: 1.14.3
go_import_path: github.com/vCloud-DFTBA/faythe
env:
  - GO111MODULE=on

jobs:
  fast_finish: true
  allow_failures:
    - script:
        - go install github.com/golangci/golangci-lint/cmd/golangci-lint
        - golangci-lint run
  include:
    - stage: Test
      name: Build the binary
      script:
        - go build ./...
    - stage: Test
      name: Verify go.sum
      script:
        - travis_retry go get -d -v ./...
        - travis_retry go mod tidy
        - git diff --exit-code
    - stage: Test
      name: Build Docker image
      if: "(type = push AND branch = master) OR tag IS NOT present"
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      script:
        - export VERSION=$(git describe --tags --always --abbrev=0 --dirty='-dev')
        - export DOCKER_USERNAME=kiennt26
        - export DOCKER_IMAGE=faythe
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
    - stage: Build and Deploy
      name: Build and push docker image
      if:
        repo = vCloud-DFTBA/faythe AND ((type = push AND branch = master) OR tag IS
        present)
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - secure: "eWPJK9jGQFKIFKryWniS1rl0CaS9DG7kfjJ/xx75pttquIqLKBb6hyPGakonQvxFjyR1+5tWaV3f0SWaKkZobUvw1K3+zWJkdwLYu5TYXbaH4rwaO1qPWI186r75EaxCUJ1Te8yxMsPOcJQc1CAG54KM0tbhIZHrgVClS6zlr6UVr9C2G22XYhX2bZ7qImeCm+ZDtCQVO+n4TA9XwtFjThTxz9mk9/L0JJBPhYO40E+SOrKk5chpa4cGx5kCpg3+zWPtOE6b9Ti6ojisozP+ELq5FxmRKREl74vkSl3eZzptKiQ+cSwv4uxsPWwBkAWD0l0qHXBBebMOcyxDMGeyqUum/b3ql3sO8h2ubU2oLcRhb7x8MIMzU/+JTIw+MBdtC2cvjExnBPbaYD3iMgPrWA/bRNhEyhuxk340xSYApYPTFjjuQfQPDp3BGfP0Bjl83SufH2317e51vEoAg3hJ/QdEWQvkBz+1jbBHdj/yIR7uHY3jlHhZOkbwGuBtXXCI35FrTv2KjO+jRk83l/dqh5IquUHh7RySq76RnTeTzbHtb4v7rgQMCsIhA8dNZg33u8M/ey9ys1TzfGsQLEN9PjtPE/crTz07T00nbZdFBLN7YaM5k/bnPH0312XZ48Cq+IP4R0EzbIbX0JUIuDY5G1g6sUw3/lsvM0hYdRw8+jU="
      script:
        # Build
        - export VERSION=$(git describe --tags --always --abbrev=0 --dirty='-dev')
        - export DOCKER_USERNAME=kiennt26
        - export DOCKER_IMAGE=faythe
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
        # Tag :version on new release
        - if [ -n "$TRAVIS_TAG" ]; then docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:${VERSION}" ; fi
        # Push
        - travis_retry docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
        - travis_retry docker push "${IMAGE_NAME}"
