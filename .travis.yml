os: linux
language: go
go: 1.14.3
go_import_path: github.com/vCloud-DFTBA/faythe
env:
  matrix:
    - GO111MODULE=on

jobs:
  allow_failures:
    - stage: Test
      name: Lint code
      script:
        - go install github.com/golangci/golangci-lint/cmd/golangci-lint
        - golangci-lint run
  include:
    - stage: Test
      name: Build the binary
      script:
        - go build ./...
    - stage: Test
      name: Verify go.sum
      script:
        - travis_retry go get -d -v ./...
        - travis_retry go mod tidy
        - git diff --exit-code
    - stage: Test
      name: Build Docker image
      if: "(type = push AND branch = master) OR tag IS NOT present"
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      script:
        - export VERSION=$(git describe --tags --always --abbrev=0 --dirty='-dev')
        - export DOCKER_USERNAME=kiennt26
        - export DOCKER_IMAGE=faythe
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
    - stage: Build and Deploy
      name: Build and push docker image
      if:
        repo = vCloud-DFTBA/faythe AND ((type = push AND branch = master) OR tag IS
        present)
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - secure: wsDFqxZJExFbeaezYy1HQpCs9mwyAk/RrQNKe6nx2QcdgLll7MohBsuE+R9OaOWIx5TjJkRSxm+qrLE/rW843JJKGjiu9CtqOTFr/VREvbwYWtcIUJwdsPPl8OT2aguLEfMT7zhQIasMhc21nEM7Evrdq8kqgH9VaCt2gmECBlOxFJs6mhbkchbMXuCHfRTT9oMy2nrhKDOBINeDaBlmY+W4eahrHJ8a/NApxrEarhTR5Ln7TNNluXmws0EzuzzAlAZvzzHTmQbWaNUB+Qm/TNSm3QH44o9LvCSiRwXYK64DunXC1eEXpYkw6rDSmTeSaTws0jhHrkRMaVpBnNLQ6Z6ZYte7KmlaUPwf/VUEnQnoS2Npn6vsW4Dy0XsY31s3IpJKYcMGOPPd+F/5hCkNkghPzHBQTaqKCsZD99olU08F8UdDpCCGto+Eb3iP+uCUy1z40gBnCGpcpa8aW3XQU8au3AH24Wtddhk5Wf3Ua0KxuyvtcfRqOQdAFv2xkVJejKsJfGUbimdekoQiF/gFzlidaYd2IvzZCUyI+puSubDzplDffk9agDWaR3lLxAfhsaHYAHdIh65927za/+/OQGLEvwPCVlC/er6qachA1dD9avAW60hkHysbDzhYt3PFwAF0sksrCQ6IdsBhOe815hTQkAcxltNc4qHPE6BRTNw=
      script:
        # Build
        - export VERSION=$(git describe --tags --always --abbrev=0 --dirty='-dev')
        - export DOCKER_USERNAME=kiennt26
        - export DOCKER_IMAGE=faythe
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
        # Tag :version on new release
        - if [ -n "$TRAVIS_TAG" ]; then docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:${VERSION}" ; fi
        # Push
        - travis_retry docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
        - travis_retry docker push "${IMAGE_NAME}"
