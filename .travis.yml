os: linux
language: go
go: 1.14.3
go_import_path: github.com/vCloud-DFTBA/faythe
env:
  - GO111MODULE=on

jobs:
  allow_failures:
    - stage: Test
      name: Lint code
      script:
        - go install github.com/golangci/golangci-lint/cmd/golangci-lint
        - golangci-lint run
  include:
    - stage: Test
      name: Build the binary
      script:
        - go build ./...
    - stage: Test
      name: Verify go.sum
      script:
        - travis_retry go get -d -v ./...
        - travis_retry go mod tidy
        - git diff --exit-code
    - stage: Test
      name: Build Docker image
      if: "(type = push AND branch = master) OR tag IS NOT present"
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      script:
        - export VERSION=$(git describe --tags --always --abbrev=0 --dirty='-dev')
        - export DOCKER_USERNAME=kiennt26
        - export DOCKER_IMAGE=faythe
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
    - stage: Build and Deploy
      name: Build and push docker image
      if:
        repo = vCloud-DFTBA/faythe AND ((type = push AND branch = master) OR tag IS
        present)
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - secure: "2pk8F/N5iM7BvdGRnm7RckZsqyCjUXkNgZcuV8PFK4EZ/tJDX4w0XnUIjHOKWAeA6bZ0XuOeJx45jeucQPgBjh2eT6twiUPvgh1sW9L1YayhICBPOzQ/fwq6sK+ss2ujZqVVAXLTYg1qRg46bvwGAl4iHZUvEL+04/jsIbQX32KzdnmaI0tfhchz1Br6OTrCeC/61PBxLq4nsG46v/2BJEvaO7Su/oLk9h0lxtJtRgO3P1m828D1UdZmX022XRVu7HLtKlbh7vGy2LAs0m+2G6dEqfTxuzVvUGDpYfvv5PgTV32rr1IP4fD1JS5J/GJUoJ+f4WItuaNJNqVE5nF7owJYM2ozh46Hc4QTwVo/XfRkz13rAr2APSH6r7eldt4+GEtnRtbVm/oMRUL+U/S02vWwqogNv71mbD8V16JXm/3zVkAwWu574BOVBbjb1u4V+bK6ybR72vMs93T4w7D+R49v4F0R3xElDNMovEflWDyd8YJ4/+iVNQODHmoQghyAO9APJAftz1MVipjGXQ2lQ3KjhMA+Tu+bM4oPKRbZRTpJI5jpnE6fyYqib7BXTYUIjUVjwWDudNLeqMnGe1Rk1Z8XtmjrxynP8TFyrpGm83OOwdO9/kOyUwAkWS6Mn/lR/vGwucaAyDlBwfkC9W/tPvoTdCjHnN/Ur9RMkkvBxzI="
      script:
        # Build
        - export VERSION=$(git describe --tags --always --abbrev=0 --dirty='-dev')
        - export DOCKER_USERNAME=kiennt26
        - export DOCKER_IMAGE=faythe
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
        # Tag :version on new release
        - if [ -n "$TRAVIS_TAG" ]; then docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:${VERSION}" ; fi
        # Push
        - travis_retry docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
        - travis_retry docker push "${IMAGE_NAME}"
