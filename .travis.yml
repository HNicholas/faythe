os: linux
language: go
go: 1.14.3
go_import_path: github.com/vCloud-DFTBA/faythe
env:
  matrix:
    - GO111MODULE=on

jobs:
  allow_failures:
    - stage: Test
      name: Lint code
      script:
        - go install github.com/golangci/golangci-lint/cmd/golangci-lint
        - golangci-lint run
  include:
    - stage: Test
      name: Build the binary
      script:
        - go build ./...
    - stage: Test
      name: Verify go.sum
      script:
        - travis_retry go get -d -v ./...
        - travis_retry go mod tidy
        - git diff --exit-code
    - stage: Test
      name: Build Docker image
      if: "(type = push AND branch = master) OR tag IS NOT present"
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      script:
        - export VERSION=$(git describe --tags --always --abbrev=0 --dirty='-dev')
        - export DOCKER_USERNAME=kiennt26
        - export DOCKER_IMAGE=faythe
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
    - stage: Build and Deploy
      name: Build and push docker image
      if:
        repo = vCloud-DFTBA/faythe AND ((type = push AND branch = master) OR tag IS
        present)
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - secure: "GcAxmYXfQ4DiEfY0dqyaNveMLgmUxbeqwX7Kjqzhoj9nLha60egwxH8ssSvHG12ZppaYh530GC0hzXAcaBzVDV2M7bFcYatWynuVILfnnbZEi25y9ki8KGhQsAsMeKKlad76IL1rwQA+GbBAu2FutOeXAqz7UDyYXfFLFCjzeOOBxVP1Qimm/ysyyqHiiS2Zd+aOHuUA0S2RMjFXY9GSS0mrxqc3P9oyTrtsOzr/aIVwz8h1yQBV2tuZC5UpzWn5FE7O5GIxNxZe2z5ml0HZtnNtgIXHIBKTXlVz4iMvXDuRySPRHXwJsrd5VjOqRIxf8dWpyhv9F3fSlZMHGhBoIygk0pAz2sUsRAGJ5JmvNWyPLebVu4OHfDhihtsbK4AM+0KnzCi8254QQ2WTyDOJkzRTHKNzpsXf83ueIznN5tiVzQczABoi0oyRClWk5WEBf1wbXb+oES6Pl4WIeNGLYV7+6izJZO/uT3fLyYKOkIzvG0ue09gNR3aytvqS/rr9dNE/tZJSMM7rXT5p48qvFv9BI5fJhrPXdgj4ySoWRobLIMmd511+/ghWS8UD+0LcY+iRsBDzdCYL/19vFom5MnqKAi6MkRffD3wf/B1Te4R+h0nXC6HXiBrSzTJ7m+OEPE9kwhkB/MEdr817WomMwcijtdCipgmtAUxb9Rwr+Ug="
      script:
        # Build
        - export VERSION=$(git describe --tags --always --abbrev=0 --dirty='-dev')
        - export DOCKER_USERNAME=kiennt26
        - export DOCKER_IMAGE=faythe
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
        # Tag :version on new release
        - if [ -n "$TRAVIS_TAG" ]; then docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:${VERSION}" ; fi
        # Push
        - travis_retry docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
        - travis_retry docker push "${IMAGE_NAME}"
